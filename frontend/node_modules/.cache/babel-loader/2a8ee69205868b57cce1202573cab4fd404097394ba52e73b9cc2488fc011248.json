{"ast":null,"code":"// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n  let index = string.indexOf(substring);\n  if (index === -1) {\n    return string;\n  }\n  const substringLength = substring.length;\n  let endIndex = 0;\n  let returnValue = '';\n  do {\n    returnValue += string.slice(endIndex, index) + substring + replacer;\n    endIndex = index + substringLength;\n    index = string.indexOf(substring, endIndex);\n  } while (index !== -1);\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n  let endIndex = 0;\n  let returnValue = '';\n  do {\n    const gotCR = string[index - 1] === '\\r';\n    returnValue += string.slice(endIndex, gotCR ? index - 1 : index) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n    endIndex = index + 1;\n    index = string.indexOf('\\n', endIndex);\n  } while (index !== -1);\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}","map":{"version":3,"names":["stringReplaceAll","string","substring","replacer","index","indexOf","substringLength","length","endIndex","returnValue","slice","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR"],"sources":["/Users/vaibhavh/Desktop/connectVerse/connect-verse-frontend/node_modules/ora/node_modules/chalk/source/utilities.js"],"sourcesContent":["// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,gBAAgBA,CAACC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAC7D,IAAIC,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACH,SAAS,CAAC;EACrC,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;IACjB,OAAOH,MAAM;EACd;EAEA,MAAMK,eAAe,GAAGJ,SAAS,CAACK,MAAM;EACxC,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,WAAW,GAAG,EAAE;EACpB,GAAG;IACFA,WAAW,IAAIR,MAAM,CAACS,KAAK,CAACF,QAAQ,EAAEJ,KAAK,CAAC,GAAGF,SAAS,GAAGC,QAAQ;IACnEK,QAAQ,GAAGJ,KAAK,GAAGE,eAAe;IAClCF,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACH,SAAS,EAAEM,QAAQ,CAAC;EAC5C,CAAC,QAAQJ,KAAK,KAAK,CAAC,CAAC;EAErBK,WAAW,IAAIR,MAAM,CAACS,KAAK,CAACF,QAAQ,CAAC;EACrC,OAAOC,WAAW;AACnB;AAEA,OAAO,SAASE,8BAA8BA,CAACV,MAAM,EAAEW,MAAM,EAAEC,OAAO,EAAET,KAAK,EAAE;EAC9E,IAAII,QAAQ,GAAG,CAAC;EAChB,IAAIC,WAAW,GAAG,EAAE;EACpB,GAAG;IACF,MAAMK,KAAK,GAAGb,MAAM,CAACG,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI;IACxCK,WAAW,IAAIR,MAAM,CAACS,KAAK,CAACF,QAAQ,EAAGM,KAAK,GAAGV,KAAK,GAAG,CAAC,GAAGA,KAAM,CAAC,GAAGQ,MAAM,IAAIE,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,GAAGD,OAAO;IAC/GL,QAAQ,GAAGJ,KAAK,GAAG,CAAC;IACpBA,KAAK,GAAGH,MAAM,CAACI,OAAO,CAAC,IAAI,EAAEG,QAAQ,CAAC;EACvC,CAAC,QAAQJ,KAAK,KAAK,CAAC,CAAC;EAErBK,WAAW,IAAIR,MAAM,CAACS,KAAK,CAACF,QAAQ,CAAC;EACrC,OAAOC,WAAW;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}